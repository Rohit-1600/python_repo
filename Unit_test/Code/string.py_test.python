Unit Test Case:

import unittest
from unittest.mock import patch

from given_code import reverse_string

class TestReverseString(unittest.TestCase):

    def test_reverse_string(self):
        input_str = "Hello, World!"
        expected_output = "!dlroW ,olleH"
        actual_output = reverse_string(input_str)
        self.assertEqual(actual_output, expected_output)

    def test_reverse_empty_string(self):
        input_str = ""
        expected_output = ""
        actual_output = reverse_string(input_str)
        self.assertEqual(actual_output, expected_output)

    def test_reverse_single_char_string(self):
        input_str = "a"
        expected_output = "a"
        actual_output = reverse_string(input_str)
        self.assertEqual(actual_output, expected_output)

    @patch('builtins.print')
    def test_reverse_string_print(self, mock_print):
        input_str = "Hello, World!"
        expected_output = "!dlroW ,olleH"
        reverse_string(input_str)
        mock_print.assert_called_with("Original string:", input_str)
        mock_print.assert_called_with("Reversed string:", expected_output)

Code coverage: 100%