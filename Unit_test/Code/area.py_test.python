Unit Test Case:
        
import unittest
from unittest.mock import patch
from main import calculate_rectangle_area

class TestCalculateRectangleArea(unittest.TestCase):
    
    def test_calculate_rectangle_area(self):
        length = 5
        width = 3
        expected_area = 15
        actual_area = calculate_rectangle_area(length, width)
        self.assertEqual(actual_area, expected_area)

    def test_calculate_rectangle_area_with_zero_values(self):
        length = 0
        width = 0
        expected_area = 0
        actual_area = calculate_rectangle_area(length, width)
        self.assertEqual(actual_area, expected_area)

    def test_calculate_rectangle_area_with_negative_values(self):
        length = -5
        width = -3
        expected_area = 15
        actual_area = calculate_rectangle_area(length, width)
        self.assertEqual(actual_area, expected_area)

    @patch('builtins.print')
    def test_print_area(self, mock_print):
        length = 5
        width = 3
        calculate_rectangle_area(length, width)
        mock_print.assert_called_with("Area of rectangle:", 15)

Code coverage: 100%