Unit Test Case:

import unittest
from unittest.mock import patch

class TestSumOfElements(unittest.TestCase):
    
    def test_sum_of_elements(self):
        # Arrange
        array = [1, 2, 3, 4, 5]
        
        # Act
        result = sum_of_elements(array)
        
        # Assert
        self.assertEqual(result, 15)
        
    def test_empty_array(self):
        # Arrange
        array = []
        
        # Act
        result = sum_of_elements(array)
        
        # Assert
        self.assertEqual(result, 0)
        
    def test_negative_numbers(self):
        # Arrange
        array = [-1, -2, -3, -4, -5]
        
        # Act
        result = sum_of_elements(array)
        
        # Assert
        self.assertEqual(result, -15)
        
    @patch('builtins.print')
    def test_print_statement(self, mock_print):
        # Arrange
        array = [1, 2, 3, 4, 5]
        
        # Act
        sum_of_elements(array)
        
        # Assert
        mock_print.assert_called_with("Sum of elements:", 15)
        
if __name__ == '__main__':
    unittest.main()
    
Code coverage: 100%