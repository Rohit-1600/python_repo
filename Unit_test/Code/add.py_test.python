import unittest
from unittest import mock

class TestSumOfElements(unittest.TestCase):

    def test_sum_of_elements(self):
        arr = [1, 2, 3, 4, 5]
        result = sum_of_elements(arr)
        self.assertEqual(result, 15)
        
    def test_sum_of_elements_empty_array(self):
        arr = []
        result = sum_of_elements(arr)
        self.assertEqual(result, 0)
        
    def test_sum_of_elements_negative_numbers(self):
        arr = [-1, -2, -3, -4, -5]
        result = sum_of_elements(arr)
        self.assertEqual(result, -15)
        
    def test_sum_of_elements_mixed_numbers(self):
        arr = [1, -2, 3, -4, 5]
        result = sum_of_elements(arr)
        self.assertEqual(result, 3)
        
    @mock.patch('<external_dependency>')
    def test_sum_of_elements_with_mock(self, mock_dep):
        arr = [1, 2, 3, 4, 5]
        mock_dep.return_value = 10
        result = sum_of_elements(arr)
        self.assertEqual(result, 10)
        mock_dep.assert_called_once()
        
if __name__ == '__main__':
    unittest.main()