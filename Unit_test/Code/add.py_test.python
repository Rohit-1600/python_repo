import unittest
from unittest.mock import patch
from file_name import sum_of_elements

class TestSumOfElements(unittest.TestCase):

    def test_sum_of_elements_with_positive_numbers(self):
        arr = [1, 2, 3, 4, 5]
        result = sum_of_elements(arr)
        self.assertEqual(result, 15)

    def test_sum_of_elements_with_negative_numbers(self):
        arr = [-1, -2, -3, -4, -5]
        result = sum_of_elements(arr)
        self.assertEqual(result, -15)

    def test_sum_of_elements_with_empty_array(self):
        arr = []
        result = sum_of_elements(arr)
        self.assertEqual(result, 0)

    def test_sum_of_elements_with_single_element_array(self):
        arr = [7]
        result = sum_of_elements(arr)
        self.assertEqual(result, 7)

    @patch('builtins.print')
    def test_sum_of_elements_function_call(self, mock_print):
        array = [1, 2, 3, 4, 5]
        sum_of_elements(array)
        mock_print.assert_called_once_with("Array:", array)
        mock_print.assert_called_with("Sum of elements:", 15)

if __name__ == '__main__':
    unittest.main()